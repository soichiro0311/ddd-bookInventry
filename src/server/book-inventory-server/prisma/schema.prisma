// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Book {
  isbnCode String   @db.VarChar(255) @id
  title     String   @db.VarChar(255)
  price   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BookStore {
  id String   @db.VarChar(255) @id
  storeName     String 
  address   String
  bookInventory BookInventory[]
  transaction Transaction[]
  order Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BookInventory {
  @@id([isbnCode, bookStoreId])
  isbnCode String   @db.VarChar(255)
  inStoreInventory     Int
  reservationInventory Int
  bookStore  BookStore @relation(fields: [bookStoreId], references: [id])
  bookStoreId String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id String   @db.VarChar(255) @id
  isbnCode     String 
  buyCount   Int
  buyDate String 
  bookStore  BookStore @relation(fields: [bookStoreId], references: [id])
  bookStoreId String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String   @db.VarChar(255) @id
  isbnCode     String 
  status Int
  orderBookCount Int
  userId String
  bookStore  BookStore @relation(fields: [bookStoreId], references: [id])
  bookStoreId String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}